name: CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          persist-credentials: true

      - name: Install LLVM and Clang
        run: |
          wget https://apt.llvm.org/llvm.sh
          chmod +x llvm.sh
          sudo ./llvm.sh 17 all
          sudo apt update
          sudo apt install -y clang-17 libc++-17-dev libc++abi-17-dev

      - name: Set up Clang
        run: |
          sudo update-alternatives --remove-all clang || true
          sudo update-alternatives --remove-all clang++ || true
          sudo update-alternatives --install /usr/bin/clang clang /usr/bin/clang-17 100
          sudo update-alternatives --install /usr/bin/clang++ clang++ /usr/bin/clang++-17 100
          sudo update-alternatives --set clang /usr/bin/clang-17
          sudo update-alternatives --set clang++ /usr/bin/clang++-17
          echo "PATH=/usr/lib/llvm-17/bin:$PATH" >> $GITHUB_ENV

      - name: Install other dependencies
        run: |
          sudo apt update
          sudo apt install -y cmake build-essential fasm libfmt-dev valgrind

      - name: Create Build Environment
        run: |
          mkdir -p build
          cd build
          cmake -DCMAKE_C_COMPILER=clang \
                -DCMAKE_CXX_COMPILER=clang++ \
                -DCMAKE_CXX_FLAGS="-stdlib=libc++" \
                -DCMAKE_EXE_LINKER_FLAGS="-stdlib=libc++ -lc++abi" \
                ..

      - name: Build
        run: |
          cd build
          make VERBOSE=1

      - name: Run Valgrind
        run: |
          cd build
          valgrind --leak-check=full --error-exitcode=1 ./build/.epsilang

      - name: Commit and Push Formatting Changes
        run: |
          git config --global user.name "github-actions"
          git config --global user.email "github-actions@github.com"
          find . -name '*.c' -o -name '*.h' | xargs clang-format-17 -i -style=file
          git add .
          git diff --cached --quiet || git commit -m "Apply clang-format style changes" && git push